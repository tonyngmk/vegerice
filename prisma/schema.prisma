// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
    user_id       String    @id @default(cuid())
    user_name     String
    user_email    String   @unique
    user_verified DateTime?
    accounts      Account[]
    shops         Shop[]

    @@unique([user_id])
    @@index([user_id])
}

model Account {
    account_id          String  @id @default(cuid())
    user_id             String
    type                String
    account_provider    String
    account_provider_id String
    refresh_token       String? // @db.Text
    access_token        String? // @db.Text
    expires_at          Int?
    token_type          String?
    scope               String?
    id_token            String? // @db.Text
    session_state       String?
    user                User    @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
    sessions            Session[]

    @@unique([user_id, account_id])
    @@index([account_id])
}

model Session {
    session_id    String   @id @default(cuid())
    sessionToken  String   @unique
    user_id       String
    account_id    String
    expires       DateTime
    account       Account  @relation(fields: [user_id, account_id], references: [user_id, account_id], onDelete: Cascade)
    
    @@unique([session_id])
    @@index([session_id])
}

model Market {
    // This can be i.e. a hawker centre / food court / e
    market_id     String    @id @default(cuid())
    market_name   String
    market_email  String?   @unique
    market_image  String?
    postal_code   Int?
    market_address String?
    shops         Shop[]

    @@index([market_id])
}

model Shop {
    shop_id       String    @id @default(cuid())
    user_id       String
    market_id     String
    shop_name     String
    shop_email    String?   @unique
    shop_image    String?
    shop_floor    Int?
    shop_unit     Int?
    user          User    @relation(fields: [user_id], references: [user_id], onDelete: Cascade)
    market        Market  @relation(fields: [market_id], references: [market_id], onDelete: Cascade)
    shop_items    ShopItem[]

    @@unique([user_id, shop_id])
    @@index([shop_id])
}

model ShopItem {
    item_id       String    @id @default(cuid())
    shop_id       String
    item_name     String
    item_image    String?
    item_price    Float?
    shop          Shop    @relation(fields: [shop_id], references: [shop_id], onDelete: Cascade)

    @@unique([item_id])
    @@index([item_id])
}


model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
